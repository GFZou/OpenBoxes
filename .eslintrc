{
  "parser": "babel-eslint",
  "plugins": [
    "import",
    "jsx-a11y",
    "react",
    "react-hooks",
    "simple-import-sort"
  ],
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "env": {
    "es6":     true,
    "browser": true,
    "node":    true
  },
  "extends": [
    "airbnb",
    "airbnb/hooks",
    "eslint:recommended",
    "plugin:react/recommended"
  ],
  "rules": {
    "arrow-parens": "warn",
    "class-methods-use-this": "warn",
    "comma-style": "warn",
    "default-param-last": "warn",
    "func-names": "warn",
    "function-call-argument-newline": "warn",
    "function-paren-newline": "warn",
    "implicit-arrow-linebreak": "warn",
    "import/first": "error",
    "import/named": "error",
    "import/newline-after-import": "error",
    // FIXME `no-cycle` should be an error
    "import/no-cycle": "warn",
    "import/no-duplicates": "error",
    "indent": "warn",
    "jsx-a11y/anchor-is-valid": [ "error", {
      "components": [ "Link" ],
      "specialLink": [ "to", "hrefLeft", "hrefRight" ],
      "aspects": [ "noHref" ]
    }],
    "jsx-a11y/control-has-associated-label": "warn",
    "jsx-a11y/label-has-associated-control": "warn",
    "jsx-a11y/label-has-for": [ "error", {
      "components": [ "Label" ],
      "required": "id",
      "allowChildren": false
    }],
    "jsx-a11y/role-supports-aria-props": "warn",
    "lines-between-class-members": "warn",
    "object-curly-newline": "warn",
    "operator-linebreak": "warn",
    "no-else-return": "warn",
    "no-multiple-empty-lines": "warn",
    "no-unused-vars": "warn",
    "react/button-has-type": "warn",
    "react/default-props-match-prop-types": "warn",
    "react/destructuring-assignment": "off",
    "react/function-component-definition": "warn",
    "react/jsx-curly-brace-presence": "warn",
    "react/jsx-curly-newline": "warn",
    "react/jsx-fragments": "warn",
    "react/jsx-indent": "warn",
    "react/jsx-key": "warn",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-pascal-case": "warn",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-tag-spacing": "warn",
    "react/jsx-wrap-multilines": "warn",
    // FIXME `no-access-state-in-setstate` should be an error
    "react/no-access-state-in-setstate": "warn",
    // FIXME `no-unstable-nested-components` should be an error
    "react/no-unstable-nested-components": "warn",
    "react/no-unused-class-component-methods": "warn",
    "react/prop-types": "warn",
    "react/require-default-props": "warn",
    "react/sort-comp": "warn",
    "react-hooks/exhaustive-deps": "warn",
    "semi": "warn",
    "simple-import-sort/exports": "error",
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Node.js builtins. You could also generate this regex if you use a `.js` config.
          // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
          [
            "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
          ],
          // Packages:
          // React package first
          ["^react$"],
          // Other external packages
          ["^@?\\w"],
          // Internal packages.
          ["^(@|@company|@ui|components|utils|config|vendored-lib|actions|consts|reducers)(/.*|$)"],
          // Side effect imports.
          ["^\\u0000"],
          // Parent imports. Put `..` last.
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // Style imports.
          ["^.+\\.s?css$"]
        ]
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "node": {
        "paths": ["src/js"]
      }
    }
  }
}
