name: API tests

on:
  pull_request:
    branches: [ develop, 'release/**', 'feature/**']
  push:
    branches: [ develop, 'release/**', 'feature/**' ]

jobs:
  build:
    env:
      JAVA_TOOL_OPTIONS: -Dstringchararrayaccessor.disabled=true
      SERVER_HOST: https://obdev3.pih-emr.org
      SERVER_PATH: /openboxes
      SERVER_PORT: 443
      API_USERNAME: ${{ secrets.API_USERNAME }}
      API_PASSWORD: ${{ secrets.API_PASSWORD }}

    runs-on: ubuntu-latest

    steps:

    - name: checkout source
      uses: actions/checkout@v3

    - name: configure java 7
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 7

    - name: configure node 14
      uses: actions/setup-node@v3
      with:
        node-version: 14

    - name: 'load ~/.grails cache'
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-v3-grails-${{ hashFiles('**/grails-app/conf/BuildConfig.groovy') }}
        path: ~/.grails

    - id: grails-sdk
      name: 'load ~/grails-1.3.9 cache'
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-v3-grails-1.3.9-${{ hashFiles('**/grails-app/conf/BuildConfig.groovy') }}
        path: ~/grails-1.3.9

    - name: 'load ~/.ivy2/ cache'
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-v3-ivy2-${{ hashFiles('**/grails-app/conf/BuildConfig.groovy') }}
        path: ~/.ivy2

    - name: 'load ${{ ''$GITHUB_WORKSPACE'' }}/node_modules cache'
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-v3-node_modules-${{ hashFiles('**/package-lock.json') }}
        path: ${{ github.workspace }}/node_modules

    - name: 'load ~/.npm cache'
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-v3-npm-${{ hashFiles('**/package-lock.json') }}
        path: ~/.npm

    - name: download grails SDK from GitHub (unless cached)
      if: steps.grails-sdk.outputs.cache-hit != 'true'
      run: |
        curl -L https://github.com/grails/grails-core/releases/download/v1.3.9/grails-1.3.9.zip \
             -o /tmp/grails-core.zip
        unzip -o /tmp/grails-core.zip -d ~

      # if this step fails midway through, the next will pick up where it left off
    - continue-on-error: true
      name: grails compile
      run: ~/grails-1.3.9/bin/grails compile

    - name: 'Run tests against remote REST API'
      run: |
        ./gradlew -x npm_run_bundle test --tests=ProductApiTest -Dserver.host=${{ env.SERVER_HOST }} \
          -Dserver.port=${{ env.SERVER_PORT }} -Dserver.path=${{ env.SERVER_PATH }} \
          -Dusername=${{ env.API_USERNAME }} -Dpassword=${{ env.API_PASSWORD }}
