name: Unit tests

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: /home/runner/work/openboxes/openboxes/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Cache .ivy2
      uses: actions/cache@v1
      with:
        path: /home/runner/.ivy2
        key: ${{ runner.os }}-ivy2-${{ hashFiles('**/grails-app/conf/BuildConfig.groovy') }}
        restore-keys: |
          ${{ runner.os }}-ivy2-
    - name: Cache .grails
      uses: actions/cache@v1
      with:
        path: /home/runner/.grails
        key: ${{ runner.os }}-.grails-${{ hashFiles('**/grails-app/conf/BuildConfig.groovy') }}
        restore-keys: |
          ${{ runner.os }}-.grails-
    - name: Cache grails-1.3.9
      uses: actions/cache@v1
      id: grails
      with:
        path: /home/runner/grails-1.3.9
        key: ${{ runner.os }}-grails-1.3.9-${{ hashFiles('**/grails-app/conf/BuildConfig.groovy') }}
        restore-keys: |
          ${{ runner.os }}-grails-1.3.9

    - name: Set up JDK 1.7
      uses: actions/setup-java@v1
      with:
        java-version: 1.7
    - name: Install grails 1.3.9
      uses: sdkman/sdkman-action@master
      id: sdkman
      if: steps.grails.outputs.cache-hit != 'true'
      with:
        candidate: grails
        version: 1.3.9
    - name: Unzip grails
      shell: bash
      if: steps.grails.outputs.cache-hit != 'true'
      run: unzip -o ${{ steps.sdkman.outputs.file }} -d $HOME/
    - name: npm install with node sass rebuild
      run: npm install && npm rebuild node-sass
    - name: npm run bundle
      run: npm run bundle
    - name: grails upgrade
      run: '$HOME/grails-1.3.9/bin/grails upgrade --force'

    - name: grails test-app :unit -coverage -xml
      run: '$HOME/grails-1.3.9/bin/grails test-app unit: -coverage -xml --non-interactive -echoOut -echoErr'
    - name: npm test
      run: npm test

    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.2.0
      with:
        filename: target/test-reports/cobertura/coverage.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '0 50'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md
