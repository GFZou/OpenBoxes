name: Unit tests

on:
  pull_request:
    branches: [ develop ]
  push:
    branches: [ develop ]

jobs:
  build:
    env:
      JAVA_TOOL_OPTIONS: -Dstringchararrayaccessor.disabled=true

    runs-on: ubuntu-latest

    steps:

    - name: checkout source
      uses: actions/checkout@v3

    - name: configure java 7
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 7

    - name: configure node 14
      uses: actions/setup-node@v3
      with:
        node-version: 14

    - name: 'load ~/.grails cache'
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-v3-grails-${{ hashFiles('**/grails-app/conf/BuildConfig.groovy') }}
        path: ~/.grails

    - id: grails-sdk
      name: 'load ~/grails-1.3.9 cache'
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-v3-grails-1.3.9-${{ hashFiles('**/grails-app/conf/BuildConfig.groovy') }}
        path: ~/grails-1.3.9

    - name: 'load ~/.ivy2/ cache'
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-v3-ivy2-${{ hashFiles('**/grails-app/conf/BuildConfig.groovy') }}
        path: ~/.ivy2

    - name: 'load ${{ ''$GITHUB_WORKSPACE'' }}/node_modules cache'
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-v3-node_modules-${{ hashFiles('**/package-lock.json') }}
        path: ${{ github.workspace }}/node_modules

    - name: 'load ~/.npm cache'
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-v3-npm-${{ hashFiles('**/package-lock.json') }}
        path: ~/.npm

    - id: sdkman
      if: steps.grails-sdk.outputs.cache-hit != 'true'
      name: download grails SDK (unless cached)
      uses: sdkman/sdkman-action@master
      with:
        candidate: grails
        version: 1.3.9

    - if: steps.grails-sdk.outputs.cache-hit != 'true'
      continue-on-error: true
      name: unzip grails SDK (unless cached)
      run: |
        ls -l ${{ steps.sdkman.outputs.file }}
        ls -l `dirname ${{ steps.sdkman.outputs.file }}`
        file ${{ steps.sdkman.outputs.file }}
        unzip -o ${{ steps.sdkman.outputs.file }} -d ~/

    - name: unzip grails SDK (if sdkman fails)
      run: |
        if [ ! -d ~/grails-1.3.9 ]
        then
          rm ${{ steps.sdkman.outputs.file }}
          curl --output-dir /tmp -sOL https://github.com/grails/grails-core/releases/download/v1.3.9/grails-1.3.9.zip
          unzip -o ${{ steps.sdkman.outputs.file }} -d ~/
        fi

    - name: npm install
      run: npm install

    - name: npm rebuild node-sass
      run: npm rebuild node-sass

    - name: npm run bundle
      run: npm run bundle

      # if this step fails midway through, the next will pick up where it left off
    - continue-on-error: true
      name: grails compile
      run: ~/grails-1.3.9/bin/grails compile

    - name: 'grails test-app unit:'
      run: '~/grails-1.3.9/bin/grails test-app unit: --non-interactive -echoOut -echoErr'
